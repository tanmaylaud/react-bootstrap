{"version":3,"sources":["webpack:///./src/pages/components/pagination.js","webpack:///./src/examples/Pagination/Advanced.js","webpack:///./src/examples/Pagination/Basic.js","webpack:///./src/withLayout.js"],"names":["withLayout","data","h","id","codeText","PaginationBasic","PaginationAdvanced","metadata","Pagination","PageItem","query","module","exports","Component","props","pathname","location","Layout","DefaultLayout","startsWith","ApiLayout"],"mappings":"8FACA,gKASeA,uBAAW,YAAsC,IAATC,EAAQ,EAARA,KACrD,OACE,oCACE,kBAAC,UAAD,CAAeC,EAAE,IAAIC,GAAG,cAAxB,cAGA,uCACW,8CADX,2CAIA,kBAAC,IAAD,CAAiBC,SAAUC,MAE3B,kBAAC,UAAD,CAAeH,EAAE,IAAIC,GAAG,mBAAxB,gBAGA,yLAGyB,0CAHzB,wDAMA,kBAAC,IAAD,CAAiBC,SAAUE,MAE3B,kBAAC,UAAD,CAAeJ,EAAE,IAAIC,GAAG,kBAAxB,OAGA,kBAAC,IAAD,CAAcI,SAAUN,EAAKO,aAC7B,kBAAC,IAAD,CAAcD,SAAUN,EAAKQ,eAK5B,IAAMC,EAAK,c,mBC1ClBC,EAAOC,QAAU,qf,mBCAjBD,EAAOC,QAAU,uc,oCCAjB,mFAKe,SAASZ,EAAWa,GACjC,OAAO,SAACC,GAAW,IACTC,EAAaD,EAAME,SAAnBD,SACJE,EAASC,IAUb,OAREH,EAASI,WAAW,qBACpBJ,EAASI,WAAW,YACpBJ,EAASI,WAAW,gBACpBJ,EAASI,WAAW,iBAEpBF,EAASG,KAIT,kBAACH,EAAD,CAAQD,SAAUF,EAAME,UACtB,kBAACH,EAAcC","file":"component---src-pages-components-pagination-js-1dcebf034f32a49298d0.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport ComponentApi from '../../components/ComponentApi';\nimport LinkedHeading from '../../components/LinkedHeading';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport PaginationAdvanced from '../../examples/Pagination/Advanced';\nimport PaginationBasic from '../../examples/Pagination/Basic';\nimport withLayout from '../../withLayout';\n\nexport default withLayout(function PaginationSection({ data }) {\n  return (\n    <>\n      <LinkedHeading h=\"1\" id=\"pagination\">\n        Pagination\n      </LinkedHeading>\n      <p>\n        A set of <em>presentational</em> components for building pagination UI.\n      </p>\n\n      <ReactPlayground codeText={PaginationBasic} />\n\n      <LinkedHeading h=\"2\" id=\"pagination-more\">\n        More options\n      </LinkedHeading>\n      <p>\n        For building more complex pagination UI, there are few convenient\n        sub-components for adding \"First\", \"Previous\", \"Next\", and \"Last\"\n        buttons, as well as an <code>Ellipsis</code> item for indicating\n        previous or continuing results.\n      </p>\n      <ReactPlayground codeText={PaginationAdvanced} />\n\n      <LinkedHeading h=\"2\" id=\"pagination-api\">\n        API\n      </LinkedHeading>\n      <ComponentApi metadata={data.Pagination} />\n      <ComponentApi metadata={data.PageItem} />\n    </>\n  );\n});\n\nexport const query = graphql`\n  query PaginationQuery {\n    Pagination: componentMetadata(displayName: { eq: \"Pagination\" }) {\n      ...ComponentApi_metadata\n    }\n    PageItem: componentMetadata(displayName: { eq: \"PageItem\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\n","module.exports = \"<Pagination>\\n  <Pagination.First />\\n  <Pagination.Prev />\\n  <Pagination.Item>{1}</Pagination.Item>\\n  <Pagination.Ellipsis />\\n\\n  <Pagination.Item>{10}</Pagination.Item>\\n  <Pagination.Item>{11}</Pagination.Item>\\n  <Pagination.Item active>{12}</Pagination.Item>\\n  <Pagination.Item>{13}</Pagination.Item>\\n  <Pagination.Item disabled>{14}</Pagination.Item>\\n\\n  <Pagination.Ellipsis />\\n  <Pagination.Item>{20}</Pagination.Item>\\n  <Pagination.Next />\\n  <Pagination.Last />\\n</Pagination>;\\n\"","module.exports = \"let active = 2;\\nlet items = [];\\nfor (let number = 1; number <= 5; number++) {\\n  items.push(\\n    <Pagination.Item key={number} active={number === active}>\\n      {number}\\n    </Pagination.Item>,\\n  );\\n}\\n\\nconst paginationBasic = (\\n  <div>\\n    <Pagination>{items}</Pagination>\\n    <br />\\n\\n    <Pagination size=\\\"lg\\\">{items}</Pagination>\\n    <br />\\n\\n    <Pagination size=\\\"sm\\\">{items}</Pagination>\\n  </div>\\n);\\n\\nrender(paginationBasic);\\n\"","import React from 'react';\n\nimport ApiLayout from './layouts/ApiLayout';\nimport DefaultLayout from './layouts';\n\nexport default function withLayout(Component) {\n  return (props) => {\n    const { pathname } = props.location;\n    let Layout = DefaultLayout;\n    if (\n      pathname.startsWith('/getting-started') ||\n      pathname.startsWith('/layout') ||\n      pathname.startsWith('/components') ||\n      pathname.startsWith('/utilities')\n    ) {\n      Layout = ApiLayout;\n    }\n\n    return (\n      <Layout location={props.location}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n}\n"],"sourceRoot":""}