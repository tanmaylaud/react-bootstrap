{"version":3,"sources":["webpack:///./src/pages/components/figures.js","webpack:///./src/examples/Figure.js","webpack:///./src/withLayout.js"],"names":["withLayout","data","h","id","codeText","Figure","metadata","figure","image","caption","query","module","exports","Component","props","pathname","location","Layout","DefaultLayout","startsWith","ApiLayout"],"mappings":"4FACA,2IAQeA,uBAAW,YAAkC,IAATC,EAAQ,EAARA,KACjD,OACE,oCACE,kBAAC,UAAD,CAAeC,EAAE,IAAIC,GAAG,WAAxB,WAIA,mGACwE,IADxE,sCAEqC,wCAFrC,KAKA,kBAAC,UAAD,CAAeD,EAAE,IAAIC,GAAG,kBAAxB,UAGA,4FACA,kBAAC,IAAD,CAAiBC,SAAUC,MAE3B,kBAAC,UAAD,CAAeH,EAAE,IAAIC,GAAG,iBAAxB,OAIA,kBAAC,IAAD,CAAcG,SAAUL,EAAKM,SAC7B,kBAAC,IAAD,CAAcD,SAAUL,EAAKO,QAC7B,kBAAC,IAAD,CAAcF,SAAUL,EAAKQ,cAK5B,IAAMC,EAAK,a,mBCtClBC,EAAOC,QAAU,6O,oCCAjB,mFAKe,SAASZ,EAAWa,GACjC,OAAO,SAACC,GAAW,IACTC,EAAaD,EAAME,SAAnBD,SACJE,EAASC,IAUb,OAREH,EAASI,WAAW,qBACpBJ,EAASI,WAAW,YACpBJ,EAASI,WAAW,gBACpBJ,EAASI,WAAW,iBAEpBF,EAASG,KAIT,kBAACH,EAAD,CAAQD,SAAUF,EAAME,UACtB,kBAACH,EAAcC","file":"component---src-pages-components-figures-js-98eef5cd7640dc14d572.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport LinkedHeading from '../../components/LinkedHeading';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport Figure from '../../examples/Figure';\nimport withLayout from '../../withLayout';\n\nexport default withLayout(function FigureSection({ data }) {\n  return (\n    <>\n      <LinkedHeading h=\"1\" id=\"figures\">\n        Figures\n      </LinkedHeading>\n\n      <p>\n        Anytime you need to display a piece of content, like an image with an{' '}\n        optional caption, consider using a <code>Figure</code>.\n      </p>\n\n      <LinkedHeading h=\"2\" id=\"figures-anchor\">\n        Figure\n      </LinkedHeading>\n      <p>Displaying related images and text with the Figure component.</p>\n      <ReactPlayground codeText={Figure} />\n\n      <LinkedHeading h=\"2\" id=\"figures-props\">\n        API\n      </LinkedHeading>\n\n      <ComponentApi metadata={data.figure} />\n      <ComponentApi metadata={data.image} />\n      <ComponentApi metadata={data.caption} />\n    </>\n  );\n});\n\nexport const query = graphql`\n  query FigureQuery {\n    figure: componentMetadata(displayName: { eq: \"Figure\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n    image: componentMetadata(displayName: { eq: \"FigureImage\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n    caption: componentMetadata(displayName: { eq: \"FigureCaption\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n  }\n`;\n","module.exports = \"<Figure>\\n  <Figure.Image\\n    width={171}\\n    height={180}\\n    alt=\\\"171x180\\\"\\n    src=\\\"holder.js/171x180\\\"\\n  />\\n  <Figure.Caption>\\n    Nulla vitae elit libero, a pharetra augue mollis interdum.\\n  </Figure.Caption>\\n</Figure>;\\n\"","import React from 'react';\n\nimport ApiLayout from './layouts/ApiLayout';\nimport DefaultLayout from './layouts';\n\nexport default function withLayout(Component) {\n  return (props) => {\n    const { pathname } = props.location;\n    let Layout = DefaultLayout;\n    if (\n      pathname.startsWith('/getting-started') ||\n      pathname.startsWith('/layout') ||\n      pathname.startsWith('/components') ||\n      pathname.startsWith('/utilities')\n    ) {\n      Layout = ApiLayout;\n    }\n\n    return (\n      <Layout location={props.location}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n}\n"],"sourceRoot":""}