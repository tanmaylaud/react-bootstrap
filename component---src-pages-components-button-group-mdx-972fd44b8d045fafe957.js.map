{"version":3,"sources":["webpack:///./src/examples/ButtonGroup/Nested.js","webpack:///./src/examples/ButtonGroup/Vertical.js","webpack:///./src/examples/ButtonGroup/ToolbarBasic.js","webpack:///./src/examples/ButtonGroup/Toolbar.js","webpack:///./src/examples/ButtonGroup/Sizes.js","webpack:///./src/examples/ButtonGroup/Basic.js","webpack:///./src/pages/components/button-group.mdx"],"names":["module","exports","query","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","className","parentName","codeText","ButtonGroupBasic","ButtonToolbarBasic","ButtonToolbar","ButtonGroupSizes","ButtonGroupNested","ButtonGroupVertical","metadata","data","ButtonGroup","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,mT,mBCAjBD,EAAOC,QAAU,g1B,mBCAjBD,EAAOC,QAAU,8c,mBCAjBD,EAAOC,QAAU,g8C,mBCAjBD,EAAOC,QAAU,6b,mBCAjBD,EAAOC,QAAU,yM,8WCeJC,EAAQ,YAYRC,EAAe,GAOtBC,EAAc,CAClBF,QACAC,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAM5E,mBAAQ,CACN,GAAM,iBADR,iBAGA,mBAAGC,UAAU,QAAb,8EAIA,mBAAQ,CACN,GAAM,iBADR,iBAGA,2CAAwB,4BAAYC,WAAW,KAAvB,YAAxB,UAAuF,4BAAYA,WAAW,KAAvB,iBAAvF,KACA,cAAC,IAAD,CAAiBC,SAAUC,IAAkBJ,QAAQ,oBACrD,mBAAQ,CACN,GAAM,kBADR,kBAGA,2CAAwB,4BAAYE,WAAW,KAAvB,iBAAxB,YAA8F,4BAAYA,WAAW,KAAvB,mBAA9F,iCACA,cAAC,IAAD,CAAiBC,SAAUE,IAAoBL,QAAQ,oBACvD,gMAGA,cAAC,IAAD,CAAiBG,SAAUG,IAAeN,QAAQ,oBAClD,mBAAQ,CACN,GAAM,UADR,UAGA,yGACG,4BAAYE,WAAW,KAAvB,SADH,iBACsE,4BAAYA,WAAW,KAAvB,iBADtE,KAEA,cAAC,IAAD,CAAiBC,SAAUI,IAAkBP,QAAQ,oBACrD,mBAAQ,CACN,GAAM,WADR,WAGA,uEACF,4BAAYE,WAAW,KAAvB,iBADE,SACiE,4BAAYA,WAAW,KAAvB,oBADjE,MAEA,cAAC,IAAD,CAAiBC,SAAUK,IAAmBR,QAAQ,oBACtD,mBAAQ,CACN,GAAM,sBADR,sBAGA,+GACsB,4BAAYE,WAAW,KAAvB,YADtB,WACsF,4BAAYA,WAAW,KAAvB,iBADtF,MAEF,wBAAQA,WAAW,KAAnB,mDACE,cAAC,IAAD,CAAiBC,SAAUM,IAAqBT,QAAQ,oBACxD,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAcU,SAAUX,EAAMY,KAAKC,YAAaZ,QAAQ,iBACxD,cAAC,IAAD,CAAcU,SAAUX,EAAMY,KAAKL,cAAeN,QAAQ,kBAK9DH,EAAWgB,gBAAiB","file":"component---src-pages-components-button-group-mdx-972fd44b8d045fafe957.js","sourcesContent":["module.exports = \"<ButtonGroup>\\n  <Button>1</Button>\\n  <Button>2</Button>\\n\\n  <DropdownButton as={ButtonGroup} title=\\\"Dropdown\\\" id=\\\"bg-nested-dropdown\\\">\\n    <Dropdown.Item eventKey=\\\"1\\\">Dropdown link</Dropdown.Item>\\n    <Dropdown.Item eventKey=\\\"2\\\">Dropdown link</Dropdown.Item>\\n  </DropdownButton>\\n</ButtonGroup>;\\n\"","module.exports = \"<ButtonGroup vertical>\\n  <Button>Button</Button>\\n  <Button>Button</Button>\\n\\n  <DropdownButton as={ButtonGroup} title=\\\"Dropdown\\\" id=\\\"bg-vertical-dropdown-1\\\">\\n    <Dropdown.Item eventKey=\\\"1\\\">Dropdown link</Dropdown.Item>\\n    <Dropdown.Item eventKey=\\\"2\\\">Dropdown link</Dropdown.Item>\\n  </DropdownButton>\\n\\n  <Button>Button</Button>\\n  <Button>Button</Button>\\n\\n  <DropdownButton as={ButtonGroup} title=\\\"Dropdown\\\" id=\\\"bg-vertical-dropdown-2\\\">\\n    <Dropdown.Item eventKey=\\\"1\\\">Dropdown link</Dropdown.Item>\\n    <Dropdown.Item eventKey=\\\"2\\\">Dropdown link</Dropdown.Item>\\n  </DropdownButton>\\n\\n  <DropdownButton as={ButtonGroup} title=\\\"Dropdown\\\" id=\\\"bg-vertical-dropdown-3\\\">\\n    <Dropdown.Item eventKey=\\\"1\\\">Dropdown link</Dropdown.Item>\\n    <Dropdown.Item eventKey=\\\"2\\\">Dropdown link</Dropdown.Item>\\n  </DropdownButton>\\n</ButtonGroup>;\\n\"","module.exports = \"<ButtonToolbar aria-label=\\\"Toolbar with button groups\\\">\\n  <ButtonGroup className=\\\"mr-2\\\" aria-label=\\\"First group\\\">\\n    <Button>1</Button> <Button>2</Button> <Button>3</Button> <Button>4</Button>\\n  </ButtonGroup>\\n  <ButtonGroup className=\\\"mr-2\\\" aria-label=\\\"Second group\\\">\\n    <Button>5</Button> <Button>6</Button> <Button>7</Button>\\n  </ButtonGroup>\\n  <ButtonGroup aria-label=\\\"Third group\\\">\\n    <Button>8</Button>\\n  </ButtonGroup>\\n</ButtonToolbar>;\\n\"","module.exports = \"<>\\n  <ButtonToolbar className=\\\"mb-3\\\" aria-label=\\\"Toolbar with Button groups\\\">\\n    <ButtonGroup className=\\\"mr-2\\\" aria-label=\\\"First group\\\">\\n      <Button variant=\\\"secondary\\\">1</Button>{' '}\\n      <Button variant=\\\"secondary\\\">2</Button>{' '}\\n      <Button variant=\\\"secondary\\\">3</Button>{' '}\\n      <Button variant=\\\"secondary\\\">4</Button>\\n    </ButtonGroup>\\n    <InputGroup>\\n      <InputGroup.Prepend>\\n        <InputGroup.Text id=\\\"btnGroupAddon\\\">@</InputGroup.Text>\\n      </InputGroup.Prepend>\\n      <FormControl\\n        type=\\\"text\\\"\\n        placeholder=\\\"Input group example\\\"\\n        aria-label=\\\"Input group example\\\"\\n        aria-describedby=\\\"btnGroupAddon\\\"\\n      />\\n    </InputGroup>\\n  </ButtonToolbar>\\n\\n  <ButtonToolbar\\n    className=\\\"justify-content-between\\\"\\n    aria-label=\\\"Toolbar with Button groups\\\"\\n  >\\n    <ButtonGroup aria-label=\\\"First group\\\">\\n      <Button variant=\\\"secondary\\\">1</Button>{' '}\\n      <Button variant=\\\"secondary\\\">2</Button>{' '}\\n      <Button variant=\\\"secondary\\\">3</Button>{' '}\\n      <Button variant=\\\"secondary\\\">4</Button>\\n    </ButtonGroup>\\n    <InputGroup>\\n      <InputGroup.Prepend>\\n        <InputGroup.Text id=\\\"btnGroupAddon2\\\">@</InputGroup.Text>\\n      </InputGroup.Prepend>\\n      <FormControl\\n        type=\\\"text\\\"\\n        placeholder=\\\"Input group example\\\"\\n        aria-label=\\\"Input group example\\\"\\n        aria-describedby=\\\"btnGroupAddon2\\\"\\n      />\\n    </InputGroup>\\n  </ButtonToolbar>\\n</>;\\n\"","module.exports = \"<>\\n  <ButtonGroup size=\\\"lg\\\" className=\\\"mb-2\\\">\\n    <Button>Left</Button>\\n    <Button>Middle</Button>\\n    <Button>Right</Button>\\n  </ButtonGroup>\\n  <br />\\n  <ButtonGroup className=\\\"mb-2\\\">\\n    <Button>Left</Button>\\n    <Button>Middle</Button>\\n    <Button>Right</Button>\\n  </ButtonGroup>\\n  <br />\\n  <ButtonGroup size=\\\"sm\\\">\\n    <Button>Left</Button>\\n    <Button>Middle</Button>\\n    <Button>Right</Button>\\n  </ButtonGroup>\\n</>;\\n\"","module.exports = \"<ButtonGroup aria-label=\\\"Basic example\\\">\\n  <Button variant=\\\"secondary\\\">Left</Button>\\n  <Button variant=\\\"secondary\\\">Middle</Button>\\n  <Button variant=\\\"secondary\\\">Right</Button>\\n</ButtonGroup>;\\n\"","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/Shivprasad/Desktop/opensource/react-bootstrap/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport ButtonGroupBasic from '../../examples/ButtonGroup/Basic';\nimport ButtonGroupNested from '../../examples/ButtonGroup/Nested';\nimport ButtonGroupSizes from '../../examples/ButtonGroup/Sizes';\nimport ButtonToolbar from '../../examples/ButtonGroup/Toolbar';\nimport ButtonToolbarBasic from '../../examples/ButtonGroup/ToolbarBasic';\nimport ButtonGroupVertical from '../../examples/ButtonGroup/Vertical';\nexport const query = graphql`\n  query ButtonGroupQuery {\n    ButtonGroup: componentMetadata(displayName: { eq: \"ButtonGroup\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n    ButtonToolbar: componentMetadata(displayName: { eq: \"ButtonToolbar\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"button-groups\"\n    }}>{`Button groups`}</h1>\n    <p className=\"lead\">\n  Group a series of buttons together on a single line with the button\n  group.\n    </p>\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h2>\n    <p>{`Wrap a series of `}<inlineCode parentName=\"p\">{`<Button>`}</inlineCode>{`s in a `}<inlineCode parentName=\"p\">{`<ButtonGroup>`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={ButtonGroupBasic} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"button-toolbar\"\n    }}>{`Button toolbar`}</h2>\n    <p>{`Combine sets of  `}<inlineCode parentName=\"p\">{`<ButtonGroup>`}</inlineCode>{`s into a `}<inlineCode parentName=\"p\">{`<ButtonToolbar>`}</inlineCode>{` for more complex components.`}</p>\n    <ReactPlayground codeText={ButtonToolbarBasic} mdxType=\"ReactPlayground\" />\n    <p>{`Feel free to mix input groups with button groups in your toolbars.\nSimilar to the example above, youâ€™ll likely need some utilities though\nto space things properly.`}</p>\n    <ReactPlayground codeText={ButtonToolbar} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"sizing\"\n    }}>{`Sizing`}</h2>\n    <p>{`Instead of applying button sizing props to every button in a group, just\nadd  `}<inlineCode parentName=\"p\">{`size `}</inlineCode>{` prop to the  `}<inlineCode parentName=\"p\">{`<ButtonGroup>`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={ButtonGroupSizes} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"nesting\"\n    }}>{`Nesting`}</h2>\n    <p>{`You can place other button types within the\n`}<inlineCode parentName=\"p\">{`<ButtonGroup>`}</inlineCode>{` like `}<inlineCode parentName=\"p\">{`<DropdownButton>`}</inlineCode>{`s.`}</p>\n    <ReactPlayground codeText={ButtonGroupNested} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"vertical-variation\"\n    }}>{`Vertical variation`}</h2>\n    <p>{`Make a set of buttons appear vertically stacked rather than\nhorizontally, by adding `}<inlineCode parentName=\"p\">{`vertical`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`<ButtonGroup>`}</inlineCode>{`.\n`}<strong parentName=\"p\">{`Split button dropdowns are not supported here.`}</strong></p>\n    <ReactPlayground codeText={ButtonGroupVertical} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.ButtonGroup} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.ButtonToolbar} mdxType=\"ComponentApi\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}