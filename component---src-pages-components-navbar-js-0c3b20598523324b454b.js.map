{"version":3,"sources":["webpack:///./src/examples/Navbar/Collapsible.js","webpack:///./src/pages/components/navbar.js","webpack:///./src/examples/Navbar/ColorSchemes.js","webpack:///./src/examples/Navbar/TextLink.js","webpack:///./src/components/Callout-styles.module.scss","webpack:///./src/examples/Navbar/ContainerOutside.js","webpack:///./src/examples/Navbar/Brand.js","webpack:///./src/examples/Navbar/ContainerInside.js","webpack:///./src/components/Callout.js","webpack:///./src/examples/Navbar/Basic.js","webpack:///./src/withLayout.js","webpack:///./src/examples/Navbar/Form.js"],"names":["module","exports","withLayout","data","h","id","className","href","codeText","NavbarBasic","NavbarBrand","NavbarForm","NavbarTextLink","NavbarColorSchemes","ContainerOutside","ContainerInside","config","docUrl","theme","NavbarCollapsible","metadata","Navbar","exportedBy","NavbarToggle","NavbarCollapse","query","Component","props","pathname","location","Layout","DefaultLayout","startsWith","ApiLayout"],"mappings":"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","file":"component---src-pages-components-navbar-js-0c3b20598523324b454b.js","sourcesContent":["module.exports = \"<Navbar collapseOnSelect expand=\\\"lg\\\" bg=\\\"dark\\\" variant=\\\"dark\\\">\\n  <Navbar.Brand href=\\\"#home\\\">React-Bootstrap</Navbar.Brand>\\n  <Navbar.Toggle aria-controls=\\\"responsive-navbar-nav\\\" />\\n  <Navbar.Collapse id=\\\"responsive-navbar-nav\\\">\\n    <Nav className=\\\"mr-auto\\\">\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n      <NavDropdown title=\\\"Dropdown\\\" id=\\\"collasible-nav-dropdown\\\">\\n        <NavDropdown.Item href=\\\"#action/3.1\\\">Action</NavDropdown.Item>\\n        <NavDropdown.Item href=\\\"#action/3.2\\\">Another action</NavDropdown.Item>\\n        <NavDropdown.Item href=\\\"#action/3.3\\\">Something</NavDropdown.Item>\\n        <NavDropdown.Divider />\\n        <NavDropdown.Item href=\\\"#action/3.4\\\">Separated link</NavDropdown.Item>\\n      </NavDropdown>\\n    </Nav>\\n    <Nav>\\n      <Nav.Link href=\\\"#deets\\\">More deets</Nav.Link>\\n      <Nav.Link eventKey={2} href=\\\"#memes\\\">\\n        Dank memes\\n      </Nav.Link>\\n    </Nav>\\n  </Navbar.Collapse>\\n</Navbar>;\\n\"","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport LinkedHeading from '../../components/LinkedHeading';\nimport Callout from '../../components/Callout';\nimport CodeBlock from '../../components/CodeBlock';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport NavbarBasic from '../../examples/Navbar/Basic';\nimport NavbarBrand from '../../examples/Navbar/Brand';\nimport NavbarCollapsible from '../../examples/Navbar/Collapsible';\nimport NavbarColorSchemes from '../../examples/Navbar/ColorSchemes';\nimport NavbarForm from '../../examples/Navbar/Form';\nimport NavbarTextLink from '../../examples/Navbar/TextLink';\nimport ContainerOutside from '../../examples/Navbar/ContainerOutside';\nimport ContainerInside from '../../examples/Navbar/ContainerInside';\nimport withLayout from '../../withLayout';\n\nexport default withLayout(function NaπvbarSection({ data }) {\n  return (\n    <>\n      <LinkedHeading h=\"1\" id=\"navbars\">\n        Navbars\n      </LinkedHeading>\n      <p className=\"lead\">\n        A powerful, responsive navigation header, the navbar. Includes support\n        for branding, navigation, and more\n      </p>\n\n      <LinkedHeading h=\"2\" id=\"navbars-overview\">\n        Overview\n      </LinkedHeading>\n      <p>\n        Here’s what you need to know before getting started with the Navbar:\n      </p>\n      <ul>\n        <li>\n          Use the <code>expand</code> prop to allow for collapsing the Navbar at\n          lower breakpoints.\n        </li>\n        <li>\n          Navbars and their contents are fluid by default. Use optional{' '}\n          <a href=\"#navbars-containers\">containers </a> to limit their\n          horizontal width.\n        </li>\n        <li>Use spacing and flex utilities to size and position content</li>\n      </ul>\n\n      <p>\n        A responsive navigation header, including support for branding,\n        navigation, and more. Here’s an example of all the sub-components\n        included in a responsive light-themed navbar that automatically\n        collapses at the lg (large) breakpoint.\n      </p>\n\n      <ReactPlayground codeText={NavbarBasic} />\n      <LinkedHeading h=\"2\" id=\"navbars-brand\">\n        Brand\n      </LinkedHeading>\n      <p>\n        A simple flexible branding component. Images are supported but will\n        likely require custom styling to work well.\n      </p>\n      <ReactPlayground codeText={NavbarBrand} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-form\">\n        Forms\n      </LinkedHeading>\n      <p>\n        Use <code>{'<Form inline>'}</code> and your various form controls within\n        the Navbar. Align the contents as needed with utility classes.\n      </p>\n      <ReactPlayground codeText={NavbarForm} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-text-link\">\n        Text and Non-nav links\n      </LinkedHeading>\n      <p>\n        Loose text and links can be wrapped <code>Navbar.Text</code> in order to\n        correctly align it vertically.\n      </p>\n      <ReactPlayground codeText={NavbarTextLink} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-colors\">\n        Color schemes\n      </LinkedHeading>\n      <p>\n        Theming the navbar has never been easier thanks to the combination of\n        theming classes and background-color utilities. Choose from{' '}\n        <code>variant=\"light\"</code> for use with light background colors, or{' '}\n        <code>variant=\"dark\"</code> for dark background colors. Then, customize\n        with the <code>bg</code> prop or any custom css!\n      </p>\n\n      <ReactPlayground codeText={NavbarColorSchemes} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-containers\">\n        Containers\n      </LinkedHeading>\n      <p>\n        While not required, you can wrap the Navbar in a{' '}\n        <code>{'<Container>'}</code> component to center it on a page, or add\n        one within to only center the contents of a{' '}\n        <a href=\"#navbar-placement\">fixed or static top navbar</a>.\n      </p>\n      <ReactPlayground codeText={ContainerOutside} />\n\n      <p>\n        When the container is within your navbar, its horizontal padding is\n        removed at breakpoints lower than your specified{' '}\n        <code>{`expand={'sm' | 'md' | 'lg' | 'xl'}`}</code> prop. This ensures\n        we’re not doubling up on padding unnecessarily on lower viewports when\n        your navbar is collapsed.\n      </p>\n      <ReactPlayground codeText={ContainerInside} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-placement\">\n        Placement\n      </LinkedHeading>\n      <p>\n        You can use Bootstrap's{' '}\n        <a href={`${config.docUrl}/utilities/position/`}>position utilities</a>{' '}\n        to place navbars in non-static positions. Choose from fixed to the top,\n        fixed to the bottom, or stickied to the top (scrolls with the page until\n        it reaches the top, then stays there). Fixed navbars use{' '}\n        <code>position: fixed</code>, meaning they’re pulled from the normal\n        flow of the DOM and may require custom CSS (e.g., padding-top on the{' '}\n        <code>{'<body>'}</code>) to prevent overlap with other elements. Also\n        note that{' '}\n        <strong>\n          <code>.sticky-top</code> uses <code>position: sticky</code>, which{' '}\n          <a href=\"https://caniuse.com/#feat=css-sticky\">\n            isn’t fully supported in every browser\n          </a>\n        </strong>\n        .\n      </p>\n\n      <p>\n        Since these positioning needs are so common for Navbars, we've added\n        convenience props for them\n      </p>\n      <h3 className=\"h4\">Fixed top</h3>\n      <CodeBlock codeText={` <Navbar fixed=\"top\" />`} />\n\n      <h3 className=\"h4\">Fixed bottom</h3>\n      <CodeBlock codeText={` <Navbar fixed=\"bottom\" />`} />\n\n      <h3 className=\"h4\">Sticky top</h3>\n      <CodeBlock codeText={` <Navbar sticky=\"top\" />`} />\n\n      <h3 className=\"h4\">Sticky bottom</h3>\n      <CodeBlock codeText={` <Navbar sticky=\"bottom\" />`} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-mobile-friendly\">\n        Responsive behaviors\n      </LinkedHeading>\n      <p>\n        Use the <code>expand</code> prop as well as the{' '}\n        <code>Navbar.Toggle</code> and <code>Navbar.Collapse</code> components\n        to control when content collapses behind a button.\n      </p>\n      <p>\n        Set the <code>defaultExpanded</code> prop to make the Navbar start\n        expanded. Set <code>collapseOnSelect</code> to make the Navbar collapse\n        automatically when the user selects an item. You can also finely control\n        the collapsing behavior by using the <code>expanded</code> and{' '}\n        <code>onToggle</code> props.\n      </p>\n\n      <Callout theme=\"warning\">\n        Watch out! You <strong>need</strong> to provide a breakpoint value to{' '}\n        <code>expand</code> in order for the Navbar to collapse at all.\n      </Callout>\n      <ReactPlayground codeText={NavbarCollapsible} />\n\n      <LinkedHeading h=\"2\" id=\"navbar-api\">\n        API\n      </LinkedHeading>\n\n      <ComponentApi metadata={data.Navbar} />\n      <ComponentApi metadata={data.NavbarBrand} exportedBy={data.Navbar} />\n      <ComponentApi metadata={data.NavbarToggle} exportedBy={data.Navbar} />\n      <ComponentApi metadata={data.NavbarCollapse} exportedBy={data.Navbar} />\n    </>\n  );\n});\n\nexport const query = graphql`\n  query NavbarQuery {\n    Navbar: componentMetadata(displayName: { eq: \"Navbar\" }) {\n      ...ComponentApi_metadata\n    }\n    NavbarBrand: componentMetadata(displayName: { eq: \"NavbarBrand\" }) {\n      ...ComponentApi_metadata\n    }\n    NavbarToggle: componentMetadata(displayName: { eq: \"NavbarToggle\" }) {\n      ...ComponentApi_metadata\n    }\n    NavbarCollapse: componentMetadata(displayName: { eq: \"NavbarCollapse\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\n","module.exports = \"<>\\n  <Navbar bg=\\\"dark\\\" variant=\\\"dark\\\">\\n    <Navbar.Brand href=\\\"#home\\\">Navbar</Navbar.Brand>\\n    <Nav className=\\\"mr-auto\\\">\\n      <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n    </Nav>\\n    <Form inline>\\n      <FormControl type=\\\"text\\\" placeholder=\\\"Search\\\" className=\\\"mr-sm-2\\\" />\\n      <Button variant=\\\"outline-info\\\">Search</Button>\\n    </Form>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"primary\\\" variant=\\\"dark\\\">\\n    <Navbar.Brand href=\\\"#home\\\">Navbar</Navbar.Brand>\\n    <Nav className=\\\"mr-auto\\\">\\n      <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n    </Nav>\\n    <Form inline>\\n      <FormControl type=\\\"text\\\" placeholder=\\\"Search\\\" className=\\\"mr-sm-2\\\" />\\n      <Button variant=\\\"outline-light\\\">Search</Button>\\n    </Form>\\n  </Navbar>\\n\\n  <br />\\n  <Navbar bg=\\\"light\\\" variant=\\\"light\\\">\\n    <Navbar.Brand href=\\\"#home\\\">Navbar</Navbar.Brand>\\n    <Nav className=\\\"mr-auto\\\">\\n      <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n    </Nav>\\n    <Form inline>\\n      <FormControl type=\\\"text\\\" placeholder=\\\"Search\\\" className=\\\"mr-sm-2\\\" />\\n      <Button variant=\\\"outline-primary\\\">Search</Button>\\n    </Form>\\n  </Navbar>\\n</>;\\n\"","module.exports = \"<Navbar>\\n  <Navbar.Brand href=\\\"#home\\\">Navbar with text</Navbar.Brand>\\n  <Navbar.Toggle />\\n  <Navbar.Collapse className=\\\"justify-content-end\\\">\\n    <Navbar.Text>\\n      Signed in as: <a href=\\\"#login\\\">Mark Otto</a>\\n    </Navbar.Text>\\n  </Navbar.Collapse>\\n</Navbar>;\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callout\":\"Callout-styles-module--callout--1_K3h\",\"warning\":\"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h\",\"danger\":\"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h\"};","module.exports = \"<Container>\\n  <Navbar expand=\\\"lg\\\" variant=\\\"light\\\" bg=\\\"light\\\">\\n    <Navbar.Brand href=\\\"#\\\">Navbar</Navbar.Brand>\\n  </Navbar>\\n</Container>;\\n\"","module.exports = \"<>\\n  <Navbar bg=\\\"light\\\">\\n    <Navbar.Brand href=\\\"#home\\\">Brand link</Navbar.Brand>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"light\\\">\\n    <Navbar.Brand>Brand text</Navbar.Brand>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"dark\\\">\\n    <Navbar.Brand href=\\\"#home\\\">\\n      <img\\n        src=\\\"/logo.svg\\\"\\n        width=\\\"30\\\"\\n        height=\\\"30\\\"\\n        className=\\\"d-inline-block align-top\\\"\\n        alt=\\\"React Bootstrap logo\\\"\\n      />\\n    </Navbar.Brand>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"dark\\\" variant=\\\"dark\\\">\\n    <Navbar.Brand href=\\\"#home\\\">\\n      <img\\n        alt=\\\"\\\"\\n        src=\\\"/logo.svg\\\"\\n        width=\\\"30\\\"\\n        height=\\\"30\\\"\\n        className=\\\"d-inline-block align-top\\\"\\n      />{' '}\\n      React Bootstrap\\n    </Navbar.Brand>\\n  </Navbar>\\n</>;\\n\"","module.exports = \"<Navbar expand=\\\"lg\\\" variant=\\\"light\\\" bg=\\\"light\\\">\\n  <Container>\\n    <Navbar.Brand href=\\\"#\\\">Navbar</Navbar.Brand>\\n  </Container>\\n</Navbar>;\\n\"","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { css } from 'astroturf';\n\nconst styles = css`\n  @import '../css/theme';\n\n  .callout {\n    border-left: 4px solid transparent;\n    padding: 1.2rem 1.2rem 1.2rem calc(1rem - 4px);\n    margin-left: -1rem;\n    margin-bottom: 2rem;\n  }\n\n  .warning {\n    composes: callout;\n    background-color: transparentize($note, 0.7);\n    border-left-color: $note;\n  }\n  .danger {\n    composes: callout;\n    background-color: transparentize($error, 0.7);\n    border-left-color: $error;\n  }\n`;\n\nconst propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n  theme: PropTypes.oneOf(['danger', 'warning']),\n};\n\nfunction Callout({ title, children, theme }) {\n  return (\n    <aside role=\"note\" className={styles[theme || 'warning']}>\n      {title && <header className=\"h5\">{title}</header>}\n      <div>{children}</div>\n    </aside>\n  );\n}\n\nCallout.propTypes = propTypes;\n\nexport default Callout;\n","module.exports = \"<Navbar bg=\\\"light\\\" expand=\\\"lg\\\">\\n  <Navbar.Brand href=\\\"#home\\\">React-Bootstrap</Navbar.Brand>\\n  <Navbar.Toggle aria-controls=\\\"basic-navbar-nav\\\" />\\n  <Navbar.Collapse id=\\\"basic-navbar-nav\\\">\\n    <Nav className=\\\"mr-auto\\\">\\n      <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n      <Nav.Link href=\\\"#link\\\">Link</Nav.Link>\\n      <NavDropdown title=\\\"Dropdown\\\" id=\\\"basic-nav-dropdown\\\">\\n        <NavDropdown.Item href=\\\"#action/3.1\\\">Action</NavDropdown.Item>\\n        <NavDropdown.Item href=\\\"#action/3.2\\\">Another action</NavDropdown.Item>\\n        <NavDropdown.Item href=\\\"#action/3.3\\\">Something</NavDropdown.Item>\\n        <NavDropdown.Divider />\\n        <NavDropdown.Item href=\\\"#action/3.4\\\">Separated link</NavDropdown.Item>\\n      </NavDropdown>\\n    </Nav>\\n    <Form inline>\\n      <FormControl type=\\\"text\\\" placeholder=\\\"Search\\\" className=\\\"mr-sm-2\\\" />\\n      <Button variant=\\\"outline-success\\\">Search</Button>\\n    </Form>\\n  </Navbar.Collapse>\\n</Navbar>;\\n\"","import React from 'react';\n\nimport ApiLayout from './layouts/ApiLayout';\nimport DefaultLayout from './layouts';\n\nexport default function withLayout(Component) {\n  return (props) => {\n    const { pathname } = props.location;\n    let Layout = DefaultLayout;\n    if (\n      pathname.startsWith('/getting-started') ||\n      pathname.startsWith('/layout') ||\n      pathname.startsWith('/components') ||\n      pathname.startsWith('/utilities')\n    ) {\n      Layout = ApiLayout;\n    }\n\n    return (\n      <Layout location={props.location}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n}\n","module.exports = \"<Navbar className=\\\"bg-light justify-content-between\\\">\\n  <Form inline>\\n    <InputGroup>\\n      <InputGroup.Prepend>\\n        <InputGroup.Text id=\\\"basic-addon1\\\">@</InputGroup.Text>\\n      </InputGroup.Prepend>\\n      <FormControl\\n        placeholder=\\\"Username\\\"\\n        aria-label=\\\"Username\\\"\\n        aria-describedby=\\\"basic-addon1\\\"\\n      />\\n    </InputGroup>\\n  </Form>\\n  <Form inline>\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Search\\\" className=\\\" mr-sm-2\\\" />\\n    <Button type=\\\"submit\\\">Submit</Button>\\n  </Form>\\n</Navbar>;\\n\""],"sourceRoot":""}