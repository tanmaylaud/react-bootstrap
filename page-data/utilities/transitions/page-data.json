{"componentChunkName":"component---src-pages-utilities-transitions-mdx","path":"/utilities/transitions/","result":{"data":{"Fade":{"composes":["Omit"],"displayName":"Fade","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"in","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Show the component; triggers the fade in or fade out animation</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"mountOnEnter","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Wait until the first \"enter\" transition to mount the component (add it to the DOM)</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"unmountOnExit","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Unmount the component (remove it from the DOM) when it is faded out</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"appear","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Run the fade in animation when the component mounts, if it is initially\nshown</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"timeout","doclets":[],"defaultValue":{"value":"300","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Duration of the fade animation in milliseconds, to ensure that finishing\ncallbacks are fired even if the original browser transition end events are\ncanceled</p>"}},"required":false,"type":{"name":"number","value":null,"raw":null}},{"name":"onEnter","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired before the component fades in</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onEntering","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the component starts to fade in</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onEntered","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the has component faded in</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExit","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired before the component fades out</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExiting","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the component starts to fade out</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExited","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the component has faded out</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}}]},"Collapse":{"composes":["TransitionCallbacks"],"displayName":"Collapse","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"in","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Show the component; triggers the expand or collapse animation</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"mountOnEnter","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Wait until the first \"enter\" transition to mount the component (add it to the DOM)</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"unmountOnExit","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Unmount the component (remove it from the DOM) when it is collapsed</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"appear","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Run the expand animation when the component mounts, if it is initially\nshown</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"timeout","doclets":[],"defaultValue":{"value":"300","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Duration of the collapse animation in milliseconds, to ensure that\nfinishing callbacks are fired even if the original browser transition end\nevents are canceled</p>"}},"required":false,"type":{"name":"number","value":null,"raw":null}},{"name":"onEnter","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired before the component expands</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onEntering","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the component starts to expand</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onEntered","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the component has expanded</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExit","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired before the component collapses</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExiting","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the component starts to collapse</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExited","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the component has collapsed</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"dimension","doclets":[],"defaultValue":{"value":"'height'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The dimension used when collapsing, or a function that returns the\ndimension</p>\n<p><em>Note: Bootstrap only partially supports 'width'!\nYou will need to supply your own CSS animation for the <code class=\"language-text\">.width</code> CSS class.</em></p>"}},"required":false,"type":{"name":"union","value":[{"name":"enum","value":[{"value":"'height'","computed":false},{"value":"'width'","computed":false}]},{"name":"func"}],"raw":null}},{"name":"getDimensionValue","doclets":[{"tag":"default","value":"element.offsetWidth | element.offsetHeight"}],"defaultValue":{"value":"element.offsetWidth | element.offsetHeight","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Function that returns the height or width of the animating DOM node</p>\n<p>Allows for providing some custom logic for how much the Collapse component\nshould animate in its specified dimension. Called with the current\ndimension prop value and the DOM node.</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"role","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>ARIA role of collapsible element</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"className","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"children","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":true,"type":{"name":"React.ReactElement","value":null,"raw":null}}]}},"pageContext":{"frontmatter":{}}}}