{"componentChunkName":"component---src-pages-components-navs-mdx","path":"/components/navs/","result":{"data":{"Nav":{"displayName":"Nav","composes":["BsPrefixPropsWithChildren"],"description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'nav'"}],"defaultValue":{"value":"'nav'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"navbarBsPrefix","doclets":[{"tag":"private","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"cardHeaderBsPrefix","doclets":[{"tag":"private","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"variant","doclets":[{"tag":"type","value":"{('tabs'|'pills')}"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The visual variant of the nav items.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'tabs'","computed":false},{"value":"'pills'","computed":false}],"raw":null}},{"name":"activeKey","doclets":[{"tag":"type","value":"{string}"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Marks the NavItem with a matching <code class=\"language-text\">eventKey</code> (or <code class=\"language-text\">href</code> if present) as active.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"fill","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Have all <code class=\"language-text\">NavItem</code>s proportionately fill all available width.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"justify","doclets":[{"tag":"type","value":"{boolean}"}],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Have all <code class=\"language-text\">NavItem</code>s evenly fill all available width.</p>"}},"required":false,"type":{"name":"boolean","value":null,"raw":"all(PropTypes.bool, ({ justify, navbar }) =>\n  justify && navbar ? Error('justify navbar `Nav`s are not supported') : null,\n)"}},{"name":"onSelect","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A callback fired when a NavItem is selected.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>\n <span class=\"token parameter\">Any eventKey<span class=\"token punctuation\">,</span>\n SyntheticEvent event<span class=\"token operator\">?</span></span>\n<span class=\"token punctuation\">)</span></code></pre></div>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"role","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>ARIA role for the Nav, in the context of a TabContainer, the default will\nbe set to \"tablist\", but can be overridden by the Nav when set explicitly.</p>\n<p>When the role is \"tablist\", NavLink focus is managed according to\nthe ARIA authoring practices for tabs:\n<a href=\"https://www.w3.org/TR/2013/WD-wai-aria-practices-20130307/#tabpanel\">https://www.w3.org/TR/2013/WD-wai-aria-practices-20130307/#tabpanel</a></p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"navbar","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Apply styling an alignment for use in a Navbar. This prop will be set\nautomatically when the Nav is used inside a Navbar.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"onKeyDown","doclets":[{"tag":"private","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"defaultActiveKey","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"unknown","value":null,"raw":null}}]},"NavItem":{"displayName":"NavItem","composes":["BsPrefixPropsWithChildren"],"description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'nav-item'"}],"defaultValue":{"value":"'nav-item'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"role","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The ARIA role of the component</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}}]},"NavLink":{"displayName":"NavLink","composes":["BsPrefixPropsWithChildren"],"description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'nav-link'"}],"defaultValue":{"value":"'nav-link'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"active","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The active state of the NavItem item.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"disabled","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The disabled state of the NavItem item.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"role","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The ARIA role for the <code class=\"language-text\">NavLink</code>, In the context of a 'tablist' parent Nav,\nthe role defaults to 'tab'</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"href","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The HTML href attribute for the <code class=\"language-text\">NavLink</code></p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"onSelect","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A callback fired when the <code class=\"language-text\">NavLink</code> is selected.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">eventKey<span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> event<span class=\"token operator\">:</span> SyntheticEvent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"eventKey","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Uniquely idenifies the <code class=\"language-text\">NavItem</code> amongst its siblings,\nused to determine and control the active state of the parent <code class=\"language-text\">Nav</code></p>"}},"required":false,"type":{"name":"any","value":null,"raw":null}},{"name":"as","doclets":[{"tag":"default","value":"'a'"}],"defaultValue":{"value":"'a'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}}]},"NavDropdown":{"displayName":"NavDropdown","composes":["BsPrefixPropsWithChildren"],"description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"id","doclets":[{"tag":"type","value":"{string|number}"},{"tag":"required","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.</p>"}},"required":true,"type":{"name":"string|number","value":null,"raw":null}},{"name":"onClick","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>An <code class=\"language-text\">onClick</code> handler passed to the Toggle component</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"title","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The content of the non-toggle Button.</p>"}},"required":true,"type":{"name":"node","value":null,"raw":null}},{"name":"disabled","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Disables the toggle NavLink</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"active","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Style the toggle NavLink as active</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"menuRole","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"renderMenuOnMount","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Whether to render the dropdown menu in the DOM before the first time it is shown</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"rootCloseEvent","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Which event when fired outside the component will cause it to be closed.</p>\n<p><em>see <a href=\"#menu-props\">DropdownMenu</a> for more details</em></p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsPrefix","doclets":[{"tag":"ignore","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]}},"pageContext":{"frontmatter":{}}}}