{"componentChunkName":"component---src-pages-components-forms-js","path":"/components/forms/","result":{"data":{"Form":{"composes":["BsPrefixProps"],"displayName":"Form","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"{'form'}"}],"defaultValue":{"value":"{'form'}","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"_ref","doclets":[{"tag":"type","value":"{ReactRef}"},{"tag":"alias","value":"ref"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The Form <code class=\"language-text\">ref</code> will be forwarded to the underlying element,\nwhich means, unless it's rendered <code class=\"language-text\">as</code> a composite component,\nit will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"inline","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Display the series of labels, form controls,\nand buttons on a single horizontal row</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"validated","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Mark a form as having been validated. Setting it to <code class=\"language-text\">true</code> will\ntoggle any validation styles on the forms elements.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"'form'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}}]},"FormRow":{"composes":null,"displayName":"FormRow","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-row'"}],"defaultValue":{"value":"'form-row'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":true,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"\"div\"","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}}]},"FormGroup":{"composes":null,"displayName":"FormGroup","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-group'"}],"defaultValue":{"value":"'form-group'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"controlId","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Sets <code class=\"language-text\">id</code> on <code class=\"language-text\">&lt;FormControl&gt;</code> and <code class=\"language-text\">htmlFor</code> on <code class=\"language-text\">&lt;FormGroup.Label&gt;</code>.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"_ref","doclets":[{"tag":"type","value":"{ReactRef}"},{"tag":"alias","value":"ref"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The FormGroup <code class=\"language-text\">ref</code> will be forwarded to the underlying element.\nUnless the FormGroup is rendered <code class=\"language-text\">as</code> a composite component,\nit will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}}]},"FormControl":{"composes":["BsPrefixProps"],"displayName":"FormControl","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"{'form-control'}"}],"defaultValue":{"value":"{'form-control'}","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsCustomPrefix","doclets":[{"tag":"default","value":"'custom'"}],"defaultValue":{"value":"'custom'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>A seperate bsPrefix used for custom controls</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"_ref","doclets":[{"tag":"type","value":"{ReactRef}"},{"tag":"alias","value":"ref"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The FormControl <code class=\"language-text\">ref</code> will be forwarded to the underlying input element,\nwhich means unless <code class=\"language-text\">as</code> is a composite component,\nit will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"size","doclets":[{"tag":"type","value":"{('sm'|'lg')}"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Input size variants</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'sm'","computed":false},{"value":"'lg'","computed":false}],"raw":null}},{"name":"htmlSize","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The size attribute of the underlying HTML element.\nSpecifies the visible width in characters if <code class=\"language-text\">as</code> is <code class=\"language-text\">&#39;input&#39;</code>.\nSpecifies the number of visible options if <code class=\"language-text\">as</code> is <code class=\"language-text\">&#39;select&#39;</code>.</p>"}},"required":false,"type":{"name":"number","value":null,"raw":null}},{"name":"as","doclets":[{"tag":"type","value":"{('input'|'textarea'|'select'|elementType)}"}],"defaultValue":{"value":"'input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The underlying HTML element to use when rendering the FormControl.</p>"}},"required":false,"type":{"name":"union","value":[{"name":"'input'"},{"name":"'textarea'"},{"name":"'select'"},{"name":"elementType"}],"raw":null}},{"name":"plaintext","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Render the input as plain text. Generally used along side <code class=\"language-text\">readOnly</code>.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"readOnly","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Make the control readonly</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"disabled","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Make the control disabled</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"value","doclets":[{"tag":"controllable","value":"onChange"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The <code class=\"language-text\">value</code> attribute of underlying input</p>"}},"required":false,"type":{"name":"union","value":[{"name":"string"},{"name":"arrayOf","value":{"name":"string"}},{"name":"number"}],"raw":null}},{"name":"onChange","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A callback fired when the <code class=\"language-text\">value</code> prop changes</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"custom","doclets":[{"tag":"type","value":"boolean"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Use Bootstrap's custom form elements to replace the browser defaults</p>"}},"required":false,"type":{"name":"boolean","value":null,"raw":"all(PropTypes.bool, ({ as, type, custom }) =>\n  custom === true && type !== 'range' && as !== 'select'\n    ? Error(\n        '`custom` can only be set to `true` when the input type is `range`, or  `select`',\n      )\n    : null,\n)"}},{"name":"type","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The HTML input <code class=\"language-text\">type</code>, which is only relevant if <code class=\"language-text\">as</code> is <code class=\"language-text\">&#39;input&#39;</code> (the default).</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"id","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Uses <code class=\"language-text\">controlId</code> from <code class=\"language-text\">&lt;FormGroup&gt;</code> if not explicitly specified.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"isValid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Add \"valid\" validation styles to the control</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isInvalid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Add \"invalid\" validation styles to the control and accompanying label</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}}]},"FormLabel":{"composes":null,"displayName":"FormLabel","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-label'"}],"defaultValue":{"value":"'form-label'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"htmlFor","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Uses <code class=\"language-text\">controlId</code> from <code class=\"language-text\">&lt;FormGroup&gt;</code> if not explicitly specified.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"column","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Renders the FormLabel as a <code class=\"language-text\">&lt;Col&gt;</code> component (accepting all the same props),\nas well as adding additional styling for horizontal forms.</p>"}},"required":false,"type":{"name":"union","value":[{"name":"bool"},{"name":"enum","value":[{"value":"'sm'","computed":false},{"value":"'lg'","computed":false}]}],"raw":null}},{"name":"_ref","doclets":[{"tag":"type","value":"{ReactRef}"},{"tag":"alias","value":"ref"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The FormLabel <code class=\"language-text\">ref</code> will be forwarded to the underlying element.\nUnless the FormLabel is rendered <code class=\"language-text\">as</code> a composite component,\nit will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"srOnly","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Hides the label visually while still allowing it to be\nread by assistive technologies.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"'label'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Set a custom element for this component</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}}]},"FormText":{"composes":null,"displayName":"FormText","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-text'"}],"defaultValue":{"value":"'form-text'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"_ref","doclets":[{"tag":"type","value":"{ReactRef}"},{"tag":"alias","value":"ref"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The FormText <code class=\"language-text\">ref</code> will be forwarded to the underlying element.\nUnless the FormText is rendered <code class=\"language-text\">as</code> a composite component,\nit will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"muted","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A convenience prop for add the <code class=\"language-text\">text-muted</code> class,\nsince it's so commonly used here.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"'small'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}}]},"FormCheck":{"composes":["BsPrefixPropsWithChildren","Pick"],"displayName":"FormCheck","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-check'"}],"defaultValue":{"value":"'form-check'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsCustomPrefix","doclets":[{"tag":"default","value":"'custom-control'"}],"defaultValue":{"value":"'custom-control'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>A seperate bsPrefix used for custom controls</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"_ref","doclets":[{"tag":"type","value":"{ReactRef}"},{"tag":"alias","value":"ref"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The FormCheck <code class=\"language-text\">ref</code> will be forwarded to the underlying input element,\nwhich means it will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"as","doclets":[{"tag":"type","value":"{('input'|elementType)}"}],"defaultValue":{"value":"'input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The underlying HTML element to use when rendering the FormCheck.</p>"}},"required":false,"type":{"name":"union","value":[{"name":"'input'"},{"name":"elementType"}],"raw":null}},{"name":"id","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A HTML id attribute, necessary for proper form accessibility.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"children","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Provide a function child to manually handle the layout of the FormCheck's inner components.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormCheck</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormCheck.Input</span></span> <span class=\"token attr-name\">isInvalid</span> <span class=\"token attr-name\">type</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>radio<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormCheck.Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Allow us to contact you?</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FormCheck.Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Feedback</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>invalid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Yo this is required</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Feedback</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FormCheck</span></span><span class=\"token punctuation\">></span></span></code></pre></div>"}},"required":false,"type":{"name":"node","value":null,"raw":null}},{"name":"inline","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"disabled","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"title","doclets":[],"defaultValue":{"value":"''","computed":false},"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"label","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"node","value":null,"raw":null}},{"name":"custom","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Use Bootstrap's custom form elements to replace the browser defaults</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"type","doclets":[{"tag":"type","value":"{('radio' | 'checkbox' | 'switch')}"}],"defaultValue":{"value":"'checkbox'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The type of checkable.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'radio'","computed":false},{"value":"'checkbox'","computed":false},{"value":"'switch'","computed":false}],"raw":"all(\n  PropTypes.oneOf(['radio', 'checkbox', 'switch']).isRequired,\n  ({ type, custom }) =>\n    type === 'switch' && custom === false\n      ? Error('`custom` cannot be set to `false` when the type is `switch`')\n      : null,\n)"}},{"name":"isValid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as valid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isInvalid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as invalid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"feedbackTooltip","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Display feedback as a tooltip.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"feedback","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A message to display when the input is in a validation state</p>"}},"required":false,"type":{"name":"node","value":null,"raw":null}}]},"FormFile":{"composes":["BsPrefixPropsWithChildren","BsCustomPrefixProps","Pick"],"displayName":"FormFile","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-file'"}],"defaultValue":{"value":"'form-file'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsCustomPrefix","doclets":[{"tag":"default","value":"'custom-file'"}],"defaultValue":{"value":"'custom-file'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>A seperate bsPrefix used for custom controls</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[{"tag":"type","value":"{('div'|elementType)}"}],"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The wrapping HTML element to use when rendering the FormFile.</p>"}},"required":false,"type":{"name":"union","value":[{"name":"'div'"},{"name":"elementType"}],"raw":null}},{"name":"inputAs","doclets":[{"tag":"type","value":"{('input'|elementType)}"}],"defaultValue":{"value":"'input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The underlying HTML element to use when rendering the FormFile.</p>"}},"required":false,"type":{"name":"union","value":[{"name":"'input'"},{"name":"elementType"}],"raw":null}},{"name":"id","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A HTML id attribute, necessary for proper form accessibility.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"children","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Provide a function child to manually handle the layout of the FormFile's inner components.</p>\n<p>If not using the custom prop <code>FormFile.Label></code> should be before <code>&#x3C;FormFile.Input isInvalid /></code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormFile</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormFile.Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Allow us to contact you?</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FormFile.Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormFile.Input</span></span> <span class=\"token attr-name\">isInvalid</span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Feedback</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>invalid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Yo this is required</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Feedback</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FormFile</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>If using the custom prop <code>&#x3C;FormFile.Input isInvalid /></code> should be before <code>FormFile.Label></code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormFile</span></span> <span class=\"token attr-name\">custom</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormFile.Input</span></span> <span class=\"token attr-name\">isInvalid</span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormFile.Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Allow us to contact you?</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FormFile.Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Feedback</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>invalid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Yo this is required</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Feedback</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FormFile</span></span><span class=\"token punctuation\">></span></span></code></pre></div>"}},"required":false,"type":{"name":"node","value":null,"raw":null}},{"name":"disabled","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"label","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"node","value":null,"raw":null}},{"name":"custom","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Use Bootstrap's custom form elements to replace the browser defaults</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isValid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as valid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isInvalid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as invalid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"feedbackTooltip","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Display feedback as a tooltip.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"feedback","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A message to display when the input is in a validation state</p>"}},"required":false,"type":{"name":"node","value":null,"raw":null}},{"name":"data-browse","doclets":[{"tag":"type","value":"string"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The string for the \"Browse\" text label when using custom file input</p>"}},"required":false,"type":{"name":"string","value":null,"raw":"all(\n  PropTypes.string,\n  ({ custom, 'data-browse': dataBrowse }) =>\n    dataBrowse && !custom\n      ? Error(\n          '`data-browse` attribute value will only be used when custom is `true`',\n        )\n      : null,\n)"}},{"name":"lang","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The language for the button when using custom file input and SCSS based strings</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"all(PropTypes.string, ({ custom, lang }) =>\n  lang && !custom\n    ? Error('`lang` can only be set when custom is `true`')\n    : null,\n)"}}]},"FormCheckInput":{"composes":["BsPrefixProps"],"displayName":"FormCheckInput","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-check-input'"}],"defaultValue":{"value":"'form-check-input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsCustomPrefix","doclets":[{"tag":"default","value":"'custom-control'"}],"defaultValue":{"value":"'custom-control'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>A seperate bsPrefix used for custom controls</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[{"tag":"type","value":"{('input'|elementType)}"}],"defaultValue":{"value":"'input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The underlying HTML element to use when rendering the FormCheckInput.</p>"}},"required":false,"type":{"name":"union","value":[{"name":"'input'"},{"name":"elementType"}],"raw":null}},{"name":"id","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A HTML id attribute, necessary for proper form accessibility.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"type","doclets":[],"defaultValue":{"value":"'checkbox'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The type of checkable.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'radio'","computed":false},{"value":"'checkbox'","computed":false}],"raw":null}},{"name":"isStatic","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A convenience prop shortcut for adding <code class=\"language-text\">position-static</code> to the input, for\ncorrect styling when used without an FormCheckLabel</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isValid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as valid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isInvalid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as invalid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}}]},"FormCheckLabel":{"composes":null,"displayName":"FormCheckLabel","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-check-input'"}],"defaultValue":{"value":"'form-check-input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsCustomPrefix","doclets":[{"tag":"default","value":"'custom-control'"}],"defaultValue":{"value":"'custom-control'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>A seperate bsPrefix used for custom controls</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"htmlFor","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The HTML for attribute for associating the label with an input</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"Feedback":{"composes":["BsPrefixProps"],"displayName":"Feedback","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"type","doclets":[{"tag":"type","value":"{('valid'|'invalid')}"}],"defaultValue":{"value":"'valid'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Specify whether the feedback is for valid or invalid fields</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'valid'","computed":false},{"value":"'invalid'","computed":false}],"raw":null}},{"name":"tooltip","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Display feedback as a tooltip.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"className","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsPrefix","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"never","value":null,"raw":null}}]},"FormFileInput":{"composes":null,"displayName":"FormFileInput","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-file-input'"}],"defaultValue":{"value":"'form-file-input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsCustomPrefix","doclets":[{"tag":"default","value":"'custom-file-input'"}],"defaultValue":{"value":"'custom-file-input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>A seperate bsPrefix used for custom controls</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[{"tag":"type","value":"{('input'|elementType)}"}],"defaultValue":{"value":"'input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The underlying HTML element to use when rendering the FormFileInput.</p>"}},"required":false,"type":{"name":"union","value":[{"name":"'input'"},{"name":"elementType"}],"raw":null}},{"name":"id","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A HTML id attribute, necessary for proper form accessibility.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"isValid","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as valid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isInvalid","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as invalid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"lang","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The language for the button when using custom file input and SCSS based strings</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"FormFileLabel":{"composes":null,"displayName":"FormFileLabel","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-file-input'"}],"defaultValue":{"value":"'form-file-input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsCustomPrefix","doclets":[{"tag":"default","value":"'custom-file-label'"}],"defaultValue":{"value":"'custom-file-label'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>A seperate bsPrefix used for custom controls</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"htmlFor","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The HTML for attribute for associating the label with an input</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"data-browse","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The string for the \"Browse\" text label when using custom file input</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]}},"pageContext":{}}}