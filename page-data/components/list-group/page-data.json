{"componentChunkName":"component---src-pages-components-list-group-mdx","path":"/components/list-group/","result":{"data":{"ListGroup":{"composes":["BsPrefixProps"],"displayName":"ListGroup","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'list-group'"}],"defaultValue":{"value":"'list-group'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"variant","doclets":[{"tag":"type","value":"{('flush')}"}],"defaultValue":{"value":"undefined","computed":true},"description":{"childMarkdownRemark":{"html":"<p>Adds a variant to the list-group</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'flush'","computed":false}],"raw":null}},{"name":"horizontal","doclets":[{"tag":"type","value":"{(true|'sm'|'md'|'lg'|'xl')}"}],"defaultValue":{"value":"undefined","computed":true},"description":{"childMarkdownRemark":{"html":"<p>Changes the flow of the list group items from vertical to horizontal.\nA value of <code class=\"language-text\">null</code> (the default) sets it to vertical for all breakpoints;\nJust including the prop sets it for all breakpoints, while <code class=\"language-text\">{sm|md|lg|xl}</code>\nmakes the list group horizontal starting at that breakpointâ€™s <code class=\"language-text\">min-width</code>.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"true","computed":false},{"value":"'sm'","computed":false},{"value":"'md'","computed":false},{"value":"'lg'","computed":false},{"value":"'xl'","computed":false}],"raw":null}},{"name":"as","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"activeKey","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"unknown","value":null,"raw":null}},{"name":"defaultActiveKey","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"unknown","value":null,"raw":null}},{"name":"onSelect","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"SelectCallback","value":null,"raw":null}}]},"ListGroupItem":{"composes":null,"displayName":"ListGroupItem","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'list-group-item'"}],"defaultValue":{"value":"'list-group-item'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"variant","doclets":[{"tag":"type","value":"{('primary'|'secondary'|'success'|'danger'|'warning'|'info'|'dark'|'light')}"}],"defaultValue":{"value":"undefined","computed":true},"description":{"childMarkdownRemark":{"html":"<p>Sets contextual classes for list item</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'secondary'","computed":false},{"value":"'success'","computed":false},{"value":"'danger'","computed":false},{"value":"'warning'","computed":false},{"value":"'info'","computed":false},{"value":"'dark'","computed":false},{"value":"'light'","computed":false}],"raw":null}},{"name":"action","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Marks a ListGroupItem as actionable, applying additional hover, active and disabled styles\nfor links and buttons.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"active","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Sets list item as active</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"disabled","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Sets list item state as disabled</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"eventKey","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A unique identifier for the Component, the <code class=\"language-text\">eventKey</code> makes it distinguishable from others in a set. Similar to React's <code class=\"language-text\">key</code> prop, in that it only needs to be unique amongst the Components siblings, not globally.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"onClick","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"href","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[{"tag":"default","value":"{'div' | 'a' | 'button'}"}],"defaultValue":{"value":"{'div' | 'a' | 'button'}","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component. For none <code class=\"language-text\">action</code> items, items render as <code class=\"language-text\">li</code>.\nFor actions the default is an achor or button element depending on whether a <code class=\"language-text\">href</code> is provided.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}}]},"ListGroupItemAction":null},"pageContext":{"frontmatter":{}}}}