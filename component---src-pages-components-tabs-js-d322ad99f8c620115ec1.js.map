{"version":3,"sources":["webpack:///./src/pages/components/tabs.js","webpack:///./src/examples/Tabs/Controlled.js","webpack:///./src/components/AriaAbbr.js","webpack:///./src/examples/Tabs/LeftTabs.js","webpack:///./src/examples/Tabs/Uncontrolled.js","webpack:///./src/examples/Tabs/NoAnimation.js","webpack:///./src/withLayout.js"],"names":["withLayout","data","h","id","className","href","title","codeText","TabsUncontrolled","exampleClassName","TabsControlled","TabsNoAnimation","LeftTabs","metadata","Tabs","Tab","TabContainer","TabContent","TabPane","query","module","exports","AriaAbbr","Component","props","pathname","location","Layout","DefaultLayout","startsWith","ApiLayout"],"mappings":"8FACA,sNAYeA,uBAAW,YAAgC,IAATC,EAAQ,EAARA,KAC/C,OACE,oCACE,kBAAC,UAAD,CAAeC,EAAE,IAAIC,GAAG,QAAxB,qBAGA,uBAAGC,UAAU,QAAb,6BAEA,kBAAC,UAAD,CAAeF,EAAE,IAAIC,GAAG,iBAAxB,YAIA,mFACwD,IACtD,uBAAGE,KAAK,sDACN,0BAAMC,MAAM,gCAAZ,OADF,IACwD,kBAAC,IAAD,MAAS,IADjE,uBAFF,KAMI,sCANJ,sDAMyE,IACvE,qCAPF,0BAOyC,yCAPzC,MAUA,kBAAC,IAAD,CACEC,SAAUC,IACVC,iBAAiB,oBAGnB,kBAAC,UAAD,CAAeP,EAAE,IAAIC,GAAG,mBAAxB,cAGA,2BACE,sCADF,uFAIA,kBAAC,IAAD,CACEI,SAAUG,IACVD,iBAAiB,oBAGnB,kBAAC,UAAD,CAAeP,EAAE,IAAIC,GAAG,qBAAxB,gBAGA,sCACU,4CADV,YAC0C,wCAE1C,kBAAC,IAAD,CACEI,SAAUI,IACVF,iBAAiB,oBAGnB,kBAAC,UAAD,CAAeP,EAAE,IAAIC,GAAG,sBAAxB,cAGA,siBAUA,+IAIA,kBAAC,UAAD,CAAeD,EAAE,IAAIC,GAAG,sBAAxB,qBAGA,oEACwC,8CADxC,IACmE,IACjE,4CAFF,SAE+B,yCAF/B,uCAGe,qCAHf,+FAMA,oEACwC,0CAAsB,IAD9D,sCAEqC,yCAFrC,+BAGa,8CAHb,+HAOA,kBAAC,IAAD,CAAiBI,SAAUK,IAAUH,iBAAiB,oBAEtD,kBAAC,UAAD,CAAeP,EAAE,IAAIC,GAAG,YAAxB,OAIA,kBAAC,IAAD,CAAcU,SAAUZ,EAAKa,OAC7B,kBAAC,IAAD,CAAcD,SAAUZ,EAAKc,MAC7B,kBAAC,IAAD,CAAcF,SAAUZ,EAAKe,eAC7B,kBAAC,IAAD,CAAcH,SAAUZ,EAAKgB,aAC7B,kBAAC,IAAD,CAAcJ,SAAUZ,EAAKiB,cAK5B,IAAMC,EAAK,c,mBC/GlBC,EAAOC,QAAU,yf,oCCAjB,2DAEe,SAASC,IACtB,OAAO,0BAAMhB,MAAM,yCAAZ,U,mBCHTc,EAAOC,QAAU,unB,qBCAjBD,EAAOC,QAAU,oS,mBCAjBD,EAAOC,QAAU,8S,oCCAjB,mFAKe,SAASrB,EAAWuB,GACjC,OAAO,SAACC,GAAW,IACTC,EAAaD,EAAME,SAAnBD,SACJE,EAASC,IAUb,OAREH,EAASI,WAAW,qBACpBJ,EAASI,WAAW,YACpBJ,EAASI,WAAW,gBACpBJ,EAASI,WAAW,iBAEpBF,EAASG,KAIT,kBAACH,EAAD,CAAQD,SAAUF,EAAME,UACtB,kBAACH,EAAcC","file":"component---src-pages-components-tabs-js-d322ad99f8c620115ec1.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport LinkedHeading from '../../components/LinkedHeading';\nimport ARIA from '../../components/AriaAbbr';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport TabsControlled from '../../examples/Tabs/Controlled';\nimport LeftTabs from '../../examples/Tabs/LeftTabs';\nimport TabsNoAnimation from '../../examples/Tabs/NoAnimation';\nimport TabsUncontrolled from '../../examples/Tabs/Uncontrolled';\nimport withLayout from '../../withLayout';\n\nexport default withLayout(function TabsSection({ data }) {\n  return (\n    <>\n      <LinkedHeading h=\"2\" id=\"tabs\">\n        Tabbed components\n      </LinkedHeading>\n      <p className=\"lead\">Dynamic tabbed interfaces</p>\n\n      <LinkedHeading h=\"2\" id=\"tabs-examples\">\n        Examples\n      </LinkedHeading>\n\n      <p>\n        Create dynamic tabbed interfaces, as described in the{' '}\n        <a href=\"https://www.w3.org/TR/wai-aria-practices/#tabpanel\">\n          <abbr title=\"Web Accessibility Initiative\">WAI</abbr> <ARIA />{' '}\n          Authoring Practices\n        </a>\n        . <code>Tabs</code> is a higher-level component for quickly creating a{' '}\n        <code>Nav</code> matched with a set of <code>TabPane</code>s.\n      </p>\n\n      <ReactPlayground\n        codeText={TabsUncontrolled}\n        exampleClassName=\"bs-example-tabs\"\n      />\n\n      <LinkedHeading h=\"2\" id=\"tabs-controlled\">\n        Controlled\n      </LinkedHeading>\n      <p>\n        <code>Tabs</code> can be controlled directly when you want to handle the\n        selection logic personally.\n      </p>\n      <ReactPlayground\n        codeText={TabsControlled}\n        exampleClassName=\"bs-example-tabs\"\n      />\n\n      <LinkedHeading h=\"2\" id=\"tabs-no-animation\">\n        No animation\n      </LinkedHeading>\n      <p>\n        Set the <code>transition</code> prop to <code>false</code>\n      </p>\n      <ReactPlayground\n        codeText={TabsNoAnimation}\n        exampleClassName=\"bs-example-tabs\"\n      />\n\n      <LinkedHeading h=\"2\" id=\"tabs-with-dropdown\">\n        Dropdowns?\n      </LinkedHeading>\n      <p>\n        Dynamic tabbed interfaces should not contain dropdown menus, as this\n        causes both usability and accessibility issues. From a usability\n        perspective, the fact that the currently displayed tab’s trigger element\n        is not immediately visible (as it’s inside the closed dropdown menu) can\n        cause confusion. From an accessibility point of view, there is currently\n        no sensible way to map this sort of construct to a standard WAI ARIA\n        pattern, meaning that it cannot be easily made understandable to users\n        of assistive technologies.\n      </p>\n      <p>\n        That said, it Dropdowns do work technically (sans focus management), but\n        we don't make any claims about support.\n      </p>\n      <LinkedHeading h=\"2\" id=\"tabs-custom-layout\">\n        Custom Tab Layout\n      </LinkedHeading>\n      <p>\n        For more complex layouts the flexible <code>TabContainer</code>,{' '}\n        <code>TabContent</code>, and <code>TabPane</code> components along with\n        any style of <code>Nav</code> allow you to quickly piece together your\n        own Tabs component with additional markup needed.\n      </p>\n      <p>\n        Create a set of NavItems each with an <code>eventKey</code>{' '}\n        corresponding to the eventKey of a <code>TabPane</code>. Wrap the whole\n        thing in a <code>TabContainer</code> and you have fully functioning\n        custom tabs component. Check out the below example making use of the\n        grid system and pills.\n      </p>\n      <ReactPlayground codeText={LeftTabs} exampleClassName=\"bs-example-tabs\" />\n\n      <LinkedHeading h=\"2\" id=\"tabs-api\">\n        API\n      </LinkedHeading>\n\n      <ComponentApi metadata={data.Tabs} />\n      <ComponentApi metadata={data.Tab} />\n      <ComponentApi metadata={data.TabContainer} />\n      <ComponentApi metadata={data.TabContent} />\n      <ComponentApi metadata={data.TabPane} />\n    </>\n  );\n});\n\nexport const query = graphql`\n  query TabsQuery {\n    Tabs: componentMetadata(displayName: { eq: \"Tabs\" }) {\n      ...ComponentApi_metadata\n    }\n    Tab: componentMetadata(displayName: { eq: \"Tab\" }) {\n      ...ComponentApi_metadata\n    }\n    TabContainer: componentMetadata(displayName: { eq: \"TabContainer\" }) {\n      ...ComponentApi_metadata\n    }\n    TabContent: componentMetadata(displayName: { eq: \"TabContent\" }) {\n      ...ComponentApi_metadata\n    }\n    TabPane: componentMetadata(displayName: { eq: \"TabPane\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\n","module.exports = \"function ControlledTabs() {\\n  const [key, setKey] = useState('home');\\n\\n  return (\\n    <Tabs\\n      id=\\\"controlled-tab-example\\\"\\n      activeKey={key}\\n      onSelect={(k) => setKey(k)}\\n    >\\n      <Tab eventKey=\\\"home\\\" title=\\\"Home\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"profile\\\" title=\\\"Profile\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"contact\\\" title=\\\"Contact\\\" disabled>\\n        <Sonnet />\\n      </Tab>\\n    </Tabs>\\n  );\\n}\\n\\nrender(<ControlledTabs />);\\n\"","import React from 'react';\n\nexport default function AriaAbbr() {\n  return <abbr title=\"Accessible Rich Internet Applications\">ARIA</abbr>;\n}\n","module.exports = \"<Tab.Container id=\\\"left-tabs-example\\\" defaultActiveKey=\\\"first\\\">\\n  <Row>\\n    <Col sm={3}>\\n      <Nav variant=\\\"pills\\\" className=\\\"flex-column\\\">\\n        <Nav.Item>\\n          <Nav.Link eventKey=\\\"first\\\">Tab 1</Nav.Link>\\n        </Nav.Item>\\n        <Nav.Item>\\n          <Nav.Link eventKey=\\\"second\\\">Tab 2</Nav.Link>\\n        </Nav.Item>\\n      </Nav>\\n    </Col>\\n    <Col sm={9}>\\n      <Tab.Content>\\n        <Tab.Pane eventKey=\\\"first\\\">\\n          <Sonnet />\\n        </Tab.Pane>\\n        <Tab.Pane eventKey=\\\"second\\\">\\n          <Sonnet />\\n        </Tab.Pane>\\n      </Tab.Content>\\n    </Col>\\n  </Row>\\n</Tab.Container>;\\n\"","module.exports = \"<Tabs defaultActiveKey=\\\"profile\\\" id=\\\"uncontrolled-tab-example\\\">\\n  <Tab eventKey=\\\"home\\\" title=\\\"Home\\\">\\n    <Sonnet />\\n  </Tab>\\n  <Tab eventKey=\\\"profile\\\" title=\\\"Profile\\\">\\n    <Sonnet />\\n  </Tab>\\n  <Tab eventKey=\\\"contact\\\" title=\\\"Contact\\\" disabled>\\n    <Sonnet />\\n  </Tab>\\n</Tabs>;\\n\"","module.exports = \"<Tabs defaultActiveKey=\\\"home\\\" transition={false} id=\\\"noanim-tab-example\\\">\\n  <Tab eventKey=\\\"home\\\" title=\\\"Home\\\">\\n    <Sonnet />\\n  </Tab>\\n  <Tab eventKey=\\\"profile\\\" title=\\\"Profile\\\">\\n    <Sonnet />\\n  </Tab>\\n  <Tab eventKey=\\\"contact\\\" title=\\\"Contact\\\" disabled>\\n    <Sonnet />\\n  </Tab>\\n</Tabs>;\\n\"","import React from 'react';\n\nimport ApiLayout from './layouts/ApiLayout';\nimport DefaultLayout from './layouts';\n\nexport default function withLayout(Component) {\n  return (props) => {\n    const { pathname } = props.location;\n    let Layout = DefaultLayout;\n    if (\n      pathname.startsWith('/getting-started') ||\n      pathname.startsWith('/layout') ||\n      pathname.startsWith('/components') ||\n      pathname.startsWith('/utilities')\n    ) {\n      Layout = ApiLayout;\n    }\n\n    return (\n      <Layout location={props.location}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n}\n"],"sourceRoot":""}