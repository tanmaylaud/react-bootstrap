{"version":3,"sources":["webpack:///./src/examples/ProgressBar/Contextual.js","webpack:///./src/examples/ProgressBar/Basic.js","webpack:///./src/examples/ProgressBar/WithLabel.js","webpack:///./src/examples/ProgressBar/Striped.js","webpack:///./src/examples/ProgressBar/Animated.js","webpack:///./src/examples/ProgressBar/ScreenreaderLabel.js","webpack:///./src/pages/components/progress.js","webpack:///./src/withLayout.js","webpack:///./src/examples/ProgressBar/Stacked.js"],"names":["module","exports","withLayout","data","h","id","className","codeText","ProgressBarBasic","ProgressBarWithLabel","ProgressBarScreenreaderLabel","ProgressBarContextual","ProgressBarStriped","ProgressBarAnimated","ProgressBarStacked","metadata","ProgressBar","query","Component","props","pathname","location","Layout","DefaultLayout","startsWith","ApiLayout"],"mappings":"6EAAAA,EAAOC,QAAU,wM,mBCAjBD,EAAOC,QAAU,+B,mBCAjBD,EAAOC,QAAU,2H,mBCAjBD,EAAOC,QAAU,wO,mBCAjBD,EAAOC,QAAU,wC,mBCAjBD,EAAOC,QAAU,kI,kCCCjB,yQAceC,uBAAW,YAAuC,IAATC,EAAQ,EAARA,KACtD,OACE,oCACE,kBAAC,UAAD,CAAeC,EAAE,IAAIC,GAAG,YAAxB,iBAIA,uBAAGC,UAAU,QAAb,+GAKA,kBAAC,UAAD,CAAeF,EAAE,IAAIC,GAAG,kBAAxB,WAGA,oDACA,kBAAC,IAAD,CAAiBE,SAAUC,MAE3B,kBAAC,UAAD,CAAeJ,EAAE,IAAIC,GAAG,kBAAxB,cAGA,oCACQ,uCADR,qIAKA,kBAAC,IAAD,CAAiBE,SAAUE,MAE3B,kBAAC,UAAD,CAAeL,EAAE,IAAIC,GAAG,+BAAxB,2BAGA,oCACQ,wCADR,qCAGA,kBAAC,IAAD,CAAiBE,SAAUG,MAE3B,kBAAC,UAAD,CAAeN,EAAE,IAAIC,GAAG,uBAAxB,2BAGA,iHAIA,kBAAC,IAAD,CAAiBE,SAAUI,MAE3B,kBAAC,UAAD,CAAeP,EAAE,IAAIC,GAAG,oBAAxB,WAGA,gGACA,kBAAC,IAAD,CAAiBE,SAAUK,MAE3B,kBAAC,UAAD,CAAeR,EAAE,IAAIC,GAAG,qBAAxB,YAGA,kCACM,0CADN,+EAIA,kBAAC,IAAD,CAAiBE,SAAUM,MAE3B,kBAAC,UAAD,CAAeT,EAAE,IAAIC,GAAG,oBAAxB,WAGA,mCACO,8BAAO,mBADd,oBAGA,kBAAC,IAAD,CAAiBE,SAAUO,MAC3B,kBAAC,UAAD,CAAeV,EAAE,IAAIC,GAAG,eAAxB,OAGA,kBAAC,IAAD,CAAcU,SAAUZ,EAAKa,kBAK5B,IAAMC,EAAK,c,oCC1FlB,mFAKe,SAASf,EAAWgB,GACjC,OAAO,SAACC,GAAW,IACTC,EAAaD,EAAME,SAAnBD,SACJE,EAASC,IAUb,OAREH,EAASI,WAAW,qBACpBJ,EAASI,WAAW,YACpBJ,EAASI,WAAW,gBACpBJ,EAASI,WAAW,iBAEpBF,EAASG,KAIT,kBAACH,EAAD,CAAQD,SAAUF,EAAME,UACtB,kBAACH,EAAcC,O,mBCpBvBnB,EAAOC,QAAU","file":"component---src-pages-components-progress-js-11a8bd84c086f0ee4e4d.js","sourcesContent":["module.exports = \"<div>\\n  <ProgressBar variant=\\\"success\\\" now={40} />\\n  <ProgressBar variant=\\\"info\\\" now={20} />\\n  <ProgressBar variant=\\\"warning\\\" now={60} />\\n  <ProgressBar variant=\\\"danger\\\" now={80} />\\n</div>;\\n\"","module.exports = \"<ProgressBar now={60} />;\\n\"","module.exports = \"const now = 60;\\n\\nconst progressInstance = <ProgressBar now={now} label={`${now}%`} />;\\n\\nrender(progressInstance);\\n\"","module.exports = \"<div>\\n  <ProgressBar striped variant=\\\"success\\\" now={40} />\\n  <ProgressBar striped variant=\\\"info\\\" now={20} />\\n  <ProgressBar striped variant=\\\"warning\\\" now={60} />\\n  <ProgressBar striped variant=\\\"danger\\\" now={80} />\\n</div>;\\n\"","module.exports = \"<ProgressBar animated now={45} />;\\n\"","module.exports = \"const now = 60;\\n\\nconst progressInstance = <ProgressBar now={now} label={`${now}%`} srOnly />;\\n\\nrender(progressInstance);\\n\"","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport LinkedHeading from '../../components/LinkedHeading';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport ProgressBarAnimated from '../../examples/ProgressBar/Animated';\nimport ProgressBarBasic from '../../examples/ProgressBar/Basic';\nimport ProgressBarContextual from '../../examples/ProgressBar/Contextual';\nimport ProgressBarScreenreaderLabel from '../../examples/ProgressBar/ScreenreaderLabel';\nimport ProgressBarStacked from '../../examples/ProgressBar/Stacked';\nimport ProgressBarStriped from '../../examples/ProgressBar/Striped';\nimport ProgressBarWithLabel from '../../examples/ProgressBar/WithLabel';\nimport withLayout from '../../withLayout';\n\nexport default withLayout(function ProgressBarSection({ data }) {\n  return (\n    <>\n      <LinkedHeading h=\"1\" id=\"progress\">\n        Progress bars\n      </LinkedHeading>\n\n      <p className=\"lead\">\n        Provide up-to-date feedback on the progress of a workflow or action with\n        simple yet flexible progress bars.\n      </p>\n\n      <LinkedHeading h=\"2\" id=\"progress-basic\">\n        Example\n      </LinkedHeading>\n      <p>Default progress bar.</p>\n      <ReactPlayground codeText={ProgressBarBasic} />\n\n      <LinkedHeading h=\"2\" id=\"progress-label\">\n        With label\n      </LinkedHeading>\n      <p>\n        Add a <code>label</code> prop to show a visible percentage. For low\n        percentages, consider adding a min-width to ensure the label's text is\n        fully visible.\n      </p>\n      <ReactPlayground codeText={ProgressBarWithLabel} />\n\n      <LinkedHeading h=\"2\" id=\"progress-screenreader-label\">\n        Screenreader only label\n      </LinkedHeading>\n      <p>\n        Add a <code>srOnly</code> prop to hide the label visually.\n      </p>\n      <ReactPlayground codeText={ProgressBarScreenreaderLabel} />\n\n      <LinkedHeading h=\"2\" id=\"progress-contextual\">\n        Contextual alternatives\n      </LinkedHeading>\n      <p>\n        Progress bars use some of the same button and alert classes for\n        consistent styles.\n      </p>\n      <ReactPlayground codeText={ProgressBarContextual} />\n\n      <LinkedHeading h=\"2\" id=\"progress-striped\">\n        Striped\n      </LinkedHeading>\n      <p>Uses a gradient to create a striped effect. Not available in IE8.</p>\n      <ReactPlayground codeText={ProgressBarStriped} />\n\n      <LinkedHeading h=\"2\" id=\"progress-animated\">\n        Animated\n      </LinkedHeading>\n      <p>\n        Add <code>animated</code> prop to animate the stripes right to left. Not\n        available in IE9 and below.\n      </p>\n      <ReactPlayground codeText={ProgressBarAnimated} />\n\n      <LinkedHeading h=\"2\" id=\"progress-stacked\">\n        Stacked\n      </LinkedHeading>\n      <p>\n        Nest <code>{'<ProgressBar />'}</code>s to stack them.\n      </p>\n      <ReactPlayground codeText={ProgressBarStacked} />\n      <LinkedHeading h=\"2\" id=\"progess-api\">\n        API\n      </LinkedHeading>\n      <ComponentApi metadata={data.ProgressBar} />\n    </>\n  );\n});\n\nexport const query = graphql`\n  query ProgressBarQuery {\n    ProgressBar: componentMetadata(displayName: { eq: \"ProgressBar\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\n","import React from 'react';\n\nimport ApiLayout from './layouts/ApiLayout';\nimport DefaultLayout from './layouts';\n\nexport default function withLayout(Component) {\n  return (props) => {\n    const { pathname } = props.location;\n    let Layout = DefaultLayout;\n    if (\n      pathname.startsWith('/getting-started') ||\n      pathname.startsWith('/layout') ||\n      pathname.startsWith('/components') ||\n      pathname.startsWith('/utilities')\n    ) {\n      Layout = ApiLayout;\n    }\n\n    return (\n      <Layout location={props.location}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n}\n","module.exports = \"<ProgressBar>\\n  <ProgressBar striped variant=\\\"success\\\" now={35} key={1} />\\n  <ProgressBar variant=\\\"warning\\\" now={20} key={2} />\\n  <ProgressBar striped variant=\\\"danger\\\" now={10} key={3} />\\n</ProgressBar>;\\n\""],"sourceRoot":""}